service: serverless
frameworkVersion: "3"

custom:
  settings:
    USERS_TABLE: Users
provider:
  name: aws
  runtime: nodejs18.x
  environment: ${self:custom.settings}
  region: sa-east-1
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Scan
            - dynamodb:GetUser
            - dynamodb:PutUser
            - dynamodb:UpdateUser
            - dynamodb:DeleteUser
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.USERS_TABLE}"

functions:
  createUser:
    handler: src/functions/handlers.createUser
    events:
    - http:
        path: /user
        method: post
  getUser:
    handler: src/functions/handlers.getUser
    events:
    - http:
        path: /user/{id}
        method: get

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.USERS_TABLE}